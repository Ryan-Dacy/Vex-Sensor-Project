{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n// Robot configuration code.\n\n// generating and setting random seed\nvoid initializeRandomSeed() {\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\nvoid vexcodeInit() {\n  // Initializing random seed.\n  initializeRandomSeed(); \n}\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n\n#include \"vex.h\"\n\n\nusing namespace vex;\n\n#define BAUDRATE 115200\n\n// Define the \"fake motor\" where the Arduino is connected\nmotor ArduinoMotor = motor(PORT20, ratio18_1, false);\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // Enable serial communication on PORT20 (where the Arduino is connected)\n  vexGenericSerialEnable(ArduinoMotor.index(), 0);\n  vexGenericSerialBaudrate(ArduinoMotor.index(), BAUDRATE);\n\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.print(\"Waiting for data...\");\n\n  while (true) {\n    // Check if data is available from the Arduino\n    if (vexGenericSerialReceiveAvail(ArduinoMotor.index()) > 0) {\n      int receivedByte = vexGenericSerialReadChar(ArduinoMotor.index()); // Read a single byte\n\n      // Display received data on the VEX Brain screen\n      Brain.Screen.clearScreen();\n      Brain.Screen.setCursor(1, 1);\n      Brain.Screen.print(\"Received: %d\", receivedByte);\n    }\n\n    vex::task::sleep(100); \n  }\n}\n","textLanguage":"cpp","robotConfig":[],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.3","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}